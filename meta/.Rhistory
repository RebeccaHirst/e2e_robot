setwd("C:/DATA/REPOS/GitHub/e2e_psychojs/e2e_robot/meta")
# Read and parse JSON
json <- suppressWarnings(readLines("../.tmp/json_logs/results.json"))
json <- jsonlite::parse_json(json)
json
capabilities <- json$capabilities
platforms <- c()
sessionIds <- c()
for (i in 1 : length(capabilities)) {
capability <- capabilities[[i]]
platforms <- c(platforms, paste(
capability$platformName,
capability$platformVersion,
capability$browserName,
capability$browserVersion,
sep = "-"
))
sessionIds <- c(sessionIds, capability$sessionId)
}
platformSessions <- data.frame(
platform = platforms,
sessionId = sessionIds
)
platformSessions
# rmsSessions maps rms to sessionId
suites <- json$suites
suites
suites[[1]]
i=1
j=1
suite <- suites[[i]]
test <- suite$tests[[j]]
test
suite$name
test$name
test$name
library(jsonlite)
# Read and parse JSON
json <- suppressWarnings(readLines("../.tmp/json_logs/results.json"))
json <- jsonlite::parse_json(json)
# platformSessions maps platform to sessionId
capabilities <- json$capabilities
platforms <- c()
sessionIds <- c()
for (i in 1 : length(capabilities)) {
capability <- capabilities[[i]]
platforms <- c(platforms, paste(
capability$platformName,
capability$platformVersion,
capability$browserName,
capability$browserVersion,
sep = "-"
))
sessionIds <- c(sessionIds, capability$sessionId)
}
platformSessions <- data.frame(
platform = platforms,
sessionId = sessionIds
)
# results maps rms to sessionId
suites <- json$suites
sessionIds <- c()
suiteNames <- c()
specNames <- c()
states <- c()
for (i in 1 : length(suites)) {
suite <- suites[[i]]
for (j in 1 : length(suite$tests)) {
test <- suite$tests[[j]]
sessionIds <- c(sessionIds, suite$sessionId)
suiteNames <- c(suiteNames, suite$name)
specNames <- c(specNames, test$name)
states <- c(states, test$state)
}
}
results <- data.frame(
sessionId = sessionIds,
suite = suiteNames,
spec = specNames,
state = states
)
results
joined <- merge(platformSessions, rmsSessions, by = "sessionId")
joined <- merge(platformSessions, results, by = "sessionId")
joined
errors
source('C:/DATA/REPOS/GitHub/e2e_psychojs/e2e_robot/meta/json_to_table.R')
joined
write.table(joined, file = "results.csv")
write.table(joined, file = "results.csv", sep = "\t")
write.table(joined, file = "results.csv", sep = "\t", row.names = FALSE)
